{
  "author": {
    "name": "Lajos Koszti",
    "email": "ajnasz@ajnasz.hu",
    "url": "http://ajnasz.hu"
  },
  "name": "ajn-session",
  "description": "A very simple and lightweight session manager",
  "version": "0.0.4",
  "repository": {
    "url": "git://github.com/Ajnasz/ajn-session.git"
  },
  "dependencies": {
    "ajncookie": ">=0.0.1"
  },
  "devDependencies": {},
  "optionalDependencies": {},
  "readme": "A very simple and lightweight session manager\n\n\nConfiguration options:\n\nSession.sessionLifeTime\nNumber, default is 60000 * 30, which is 60 min\n\nSession.maxSize\nNumber, Max size of all data stored per session in bytes, default is 262144 bytes\n\nSession.sessionName\nString, Name of the session cookie, default is 'nodesess';\n\nusage:\n\nvar Session = require('../index').Session;\nvar http = require('http');\n\n\nvar srv = http.createServer(function (req, res) {\n    // initialize a session object on each request, pass the request and\n    // response objects to it it will discover if session is alread set, and\n    // create one if it isn't\n    var session = new Session(req, res);\n\n    // set foo session property value to bar\n    session.setData('foo', 'bar');\n\n    // get foo session property value and print it to console\n    console.log(session.getData('foo'));\n\n    // delete foo session property value to bar\n    session.delData('foo', null);\n\n    // print 'foo' session property to console, it must return undefined\n    console.log(session.getData('foo'));\n    ....\n});\nsrv.listen(1111, '127.0.0.1');\n",
  "_id": "ajn-session@0.0.4",
  "dist": {
    "shasum": "aabacc40e001404fb8d956be76bf65e11caed430"
  },
  "_from": "ajn-session@git://github.com/tbergeron/ajn-session.git"
}
